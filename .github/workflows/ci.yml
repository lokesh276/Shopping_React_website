name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  sonar_scan:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up JDK for SonarQube
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    # Cache node modules (optional)
    - name: Cache Node modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    # Install dependencies
    - name: Install dependencies
      run: |
        npm install

    # SonarQube Scan
    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        # Download SonarQube Scanner
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
        unzip sonar-scanner-cli-*.zip
        export PATH="$PATH:$(pwd)/sonar-scanner-5.0.1.3006-linux/bin"
        
        # Run SonarQube analysis
        sonar-scanner \
          -Dsonar.projectKey=Shopping_React_website \
          -Dsonar.sources=src \
          -Dsonar.host.url=https://3acc-49-156-93-193.ngrok-free.app \
          -Dsonar.login=$SONAR_TOKEN

  trigger_jenkins:
    runs-on: ubuntu-latest
    needs: sonar_scan
    steps:
    # Trigger Jenkins build after SonarQube analysis
    - name: Trigger Jenkins build
      run: |
        curl -X POST \
          -u "your-jenkins-user:${{ secrets.JENKINS_API_TOKEN }}" \
          "http://your-jenkins-url/job/your-jenkins-job-name/build"

